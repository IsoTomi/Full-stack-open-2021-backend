{"version":3,"sources":["components/Filter.js","components/Notification.js","components/Persons.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","filterHandler","value","onChange","Notification","message","error","className","Persons","persons","removeHandler","regex","RegExp","filteredPersons","person","name","match","map","number","onClick","id","PersonForm","props","onSubmit","add","newName","personChanger","newNumber","numberChanger","type","baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","noteMessage","setNoteMessage","setError","useEffect","personService","event","target","preventDefault","personObject","found","find","setTimeout","undefined","window","confirm","newArray","catch","n","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdc52a99.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filter, filterHandler}) => {\r\n  return (\r\n    <div>\r\n      Filter with: <input value={filter} onChange={filterHandler} />\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message, error }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  // Is the messsage an error message?\r\n  const className = error === true ? \"error\" : \"notification\"\r\n\r\n  return (\r\n    <div className={className}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Persons = ({persons, filter, removeHandler}) => {\r\n\t// Fiter the persons using regular expressions\r\n\tconst regex = new RegExp(filter, 'i');\r\n\tconst filteredPersons = persons.filter(person => person.name.match(regex));\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ul>\r\n\t\t\t\t{filteredPersons.map(person =>\r\n\t\t\t\t<li key={person.id}>\r\n\t\t\t\t\t{person.name} {person.number} \r\n\t\t\t\t\t<button onClick={() => removeHandler(person.id)}>Delete</button>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.add} >\r\n      <div>\r\n        Name: <input value={props.newName} onChange={props.personChanger} />\r\n      </div>\r\n      <div>\r\n        Number: <input value={props.newNumber} onChange={props.numberChanger} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>    \r\n  );\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = 'https://stormy-tundra-84593.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst exportedObject = { getAll, create, update, remove }\r\n\r\nexport default exportedObject","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport personService from './services/persons'\r\n\r\n// App-component\r\nconst App = () => {\r\n  // HOOKS\r\n  const [ persons, setPersons ] = useState([]);\r\n  const [ newPerson, setNewPerson ] = useState({})\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n  const [ filter, setFilter ] = useState('');\r\n  const [ noteMessage, setNoteMessage ] = useState(null)\r\n  const [ error, setError ] = useState(false)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(response => {\r\n        setPersons(response)\r\n      })      \r\n  }, [])\r\n\r\n  // EVENT HANDLERS\r\n\r\n  // addPerson - Adds a new person to the phonebook\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n      \r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n\r\n    // Is the person been already listed?\r\n    const found = persons.find(person => person.name === newName);\r\n\r\n    // Has the user gave a name and a number?\r\n    // No?\r\n    if (newName === '' || newNumber === '') {\r\n       // Show the notification for 5 seconds\r\n       setNoteMessage('Please give a name and a number.')\r\n       setTimeout(() => {\r\n         setNoteMessage(null)\r\n       }, 5000)\r\n       return \r\n    }\r\n\r\n    if (found !== undefined) {\r\n      // Person is already been listed\r\n      if (window.confirm(`${newName} is already added to phonebook, \r\n      replace the old number with a new one?`) === true) {\r\n        // Update the number\r\n        personService\r\n        .update(found.id, personObject)\r\n        .then(response => {\r\n          // Map a new array with the changed number\r\n          const newArray = persons.map(person => person.id === found.id ? \r\n            {...person, number: newNumber} : person)\r\n          setPersons(newArray)  // Update \r\n          setError(false)       // Set notification as non-error\r\n\r\n          // Show the notification for 5 seconds\r\n          setNoteMessage(`Changed the number for ${response.name}`)\r\n          setTimeout(() => {\r\n            setNoteMessage(null)\r\n          }, 5000)\r\n\r\n          // Update\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        // Person has already been deleted\r\n        .catch(error => {\r\n          // Set notification as an error\r\n          setError(true)\r\n          // Show notification for 5 secoonds\r\n          setNoteMessage(\r\n            `Information of ${newName} has already been removed from the server`\r\n          )\r\n          setTimeout(() => {\r\n            setNoteMessage(null)\r\n          }, 5000)\r\n          setPersons(persons.filter(n => n.id !== found.id))\r\n        })\r\n      }\r\n    // Name not found in the phonebook\r\n    } else {\r\n      // Create a new person\r\n      personService\r\n      .create(personObject)\r\n      .then(response => {\r\n        // Update\r\n        setPersons(persons.concat(response))\r\n        setNewName('')\r\n        setNewNumber('')\r\n        // Set notification as non-error\r\n        setError(false)\r\n        // Show notification for 5 secoonds\r\n        setNoteMessage(`Added ${response.name}`)\r\n        setTimeout(() => {\r\n          setNoteMessage(null)\r\n        }, 5000)\r\n      })\r\n    } \r\n  }\r\n\r\n  // handlePersonChange - Handles the changes in the Name input-field\r\n  const handlePersonChange = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  // handleNumberChange - Handles the changes in the Number input-field\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  // handleFilterChange - Handles the changes in the Filter input-field\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  // handlePersonRemove - Removes a person from the phonebook\r\n  const handlePersonRemove = (id) => {\r\n    // find the name of the person using id\r\n    const name = persons.find(person => person.id === id).name\r\n    \r\n    if (window.confirm(`Delete ${name}`) === true)\r\n    {\r\n      // Delete the person\r\n      personService\r\n      .remove(id)\r\n      .then(response => {\r\n        // Filter a new array without the deleted user\r\n        const newArray = persons.filter(person => person.id !== id)\r\n        // Update\r\n        setPersons(newArray)\r\n        setError(false)       // Set notification as non-error\r\n          // Show notification for 5 secoonds\r\n          setNoteMessage(`Deleted ${name}`)\r\n          setTimeout(() => {\r\n            setNoteMessage(null)\r\n          }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={noteMessage} error={error} />\r\n      <Filter filter={filter} filterHandler={handleFilterChange} />\r\n      <h2>Add new</h2>\r\n      <PersonForm \r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        add={addPerson}\r\n        personChanger={handlePersonChange}\r\n        numberChanger={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} filter={filter} removeHandler={handlePersonRemove} />\r\n      \r\n    </div>\r\n  )    \r\n}\r\n  \r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}